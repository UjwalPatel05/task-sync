datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Board {
  id            String    @id @default(cuid()) @map("_id")
  orgId         String
  title         String
  imageId       String
  imageThumbUrl String
  imageFullUrl  String
  imageUserName String
  imageLinkHTML String
  lists         List[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model List {
  id         String    @id @default(cuid()) @map("_id")
  title      String
  order      Int

  boardId    String
  board      Board     @relation(fields: [boardId], references: [id])

  cards      Card[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Card {
  id          String    @id @default(cuid()) @map("_id")
  title       String
  description String?
  order       Int

  listId      String
  list        List      @relation(fields: [listId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum ACTION {
  CREATE
  UPDATE
  DELETE
}

enum ENTITY_TYPE {
  BOARD
  LIST
  CARD
}

model AuditLog {
  id           String      @id @default(cuid()) @map("_id")
  orgId        String
  action       ACTION
  entityId     String
  entityTitle  String
  entityType   ENTITY_TYPE
  userId       String
  userName     String
  userImage    String

  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model OrgLimit {
  id          String      @id @default(cuid()) @map("_id")
  orgId       String      @unique
  count       Int         @default(0)

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrgSubscription {
  id                   String      @id @default(cuid()) @map("_id")
  orgId                String      @unique

  stripeCustomerId     String?
  stripeSubscriptionId String?
  stripePriceId        String?
  stripeCurrentPeriodEnd DateTime?
}
